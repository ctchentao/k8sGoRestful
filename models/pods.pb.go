// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pods.proto

package models

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Pods struct {
	Name             *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Label            []*Label `protobuf:"bytes,2,rep,name=label" json:"label,omitempty"`
	RestartPolicy    *string  `protobuf:"bytes,3,opt,name=restartPolicy" json:"restartPolicy,omitempty"`
	Image            *string  `protobuf:"bytes,4,req,name=image" json:"image,omitempty"`
	ContainPort      *int32   `protobuf:"varint,5,req,name=containPort" json:"containPort,omitempty"`
	Protocol         *string  `protobuf:"bytes,6,opt,name=protocol" json:"protocol,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Pods) Reset()                    { *m = Pods{} }
func (m *Pods) String() string            { return proto.CompactTextString(m) }
func (*Pods) ProtoMessage()               {}
func (*Pods) Descriptor() ([]byte, []int) { return fileDescriptorPods, []int{0} }

func (m *Pods) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Pods) GetLabel() []*Label {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *Pods) GetRestartPolicy() string {
	if m != nil && m.RestartPolicy != nil {
		return *m.RestartPolicy
	}
	return ""
}

func (m *Pods) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *Pods) GetContainPort() int32 {
	if m != nil && m.ContainPort != nil {
		return *m.ContainPort
	}
	return 0
}

func (m *Pods) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

func init() {
	proto.RegisterType((*Pods)(nil), "models.Pods")
}

func init() { proto.RegisterFile("pods.proto", fileDescriptorPods) }

var fileDescriptorPods = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8e, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0xb7, 0x5d, 0xdc, 0x59, 0xf6, 0x32, 0x78, 0x08, 0xf5, 0x12, 0xd4, 0x43, 0x2f,
	0x76, 0xc1, 0xe7, 0xf0, 0x50, 0xfa, 0x02, 0x92, 0xb6, 0x63, 0x0d, 0x24, 0x99, 0x25, 0xcd, 0x16,
	0x7c, 0x34, 0xdf, 0x4e, 0x9c, 0x88, 0xe8, 0x6d, 0xbe, 0xff, 0x67, 0x3e, 0x7e, 0x80, 0x0b, 0xcf,
	0x6b, 0x77, 0x89, 0x9c, 0x18, 0xf7, 0x9e, 0x67, 0x72, 0x6b, 0xf3, 0xb4, 0xd8, 0xf4, 0x7e, 0x1d,
	0xbb, 0x89, 0xfd, 0x79, 0xe1, 0x85, 0xcf, 0x52, 0x8f, 0xd7, 0x37, 0x21, 0x01, 0xb9, 0xf2, 0x5b,
	0x73, 0x47, 0x61, 0xb3, 0x91, 0x83, 0xa7, 0x90, 0x5e, 0x37, 0x13, 0xad, 0x19, 0x1d, 0xfd, 0x38,
	0xef, 0x3f, 0x0b, 0xa8, 0x7a, 0x9e, 0x57, 0x44, 0xa8, 0x82, 0xf1, 0xa4, 0x0a, 0x5d, 0xb6, 0x87,
	0x41, 0x6e, 0x7c, 0x80, 0xda, 0x99, 0x91, 0x9c, 0x2a, 0xf5, 0xae, 0x3d, 0x3e, 0x9f, 0xba, 0x3c,
	0xa0, 0x7b, 0xf9, 0x0e, 0x87, 0xdc, 0xe1, 0x23, 0x9c, 0x22, 0xad, 0xc9, 0xc4, 0xd4, 0xb3, 0xb3,
	0xd3, 0x87, 0xda, 0xe9, 0xa2, 0x3d, 0x0c, 0xff, 0x43, 0xbc, 0x85, 0xda, 0x7a, 0xb3, 0x90, 0xaa,
	0xc4, 0x9f, 0x01, 0x35, 0x1c, 0x27, 0x0e, 0xc9, 0xd8, 0xd0, 0x73, 0x4c, 0xaa, 0xd6, 0x65, 0x5b,
	0x0f, 0x7f, 0x23, 0x6c, 0xe0, 0x46, 0x86, 0x4e, 0xec, 0xd4, 0x5e, 0xc4, 0xbf, 0xfc, 0x15, 0x00,
	0x00, 0xff, 0xff, 0x8e, 0xd5, 0xe7, 0xb9, 0x1c, 0x01, 0x00, 0x00,
}
